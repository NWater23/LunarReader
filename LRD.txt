'ProgramMode:RUN
'#CBINT
'#_Mat _0
IsExist("8PX.hzk")->Theta
{8,Theta}->Dim Mat A.P
32->O
1024->Dim List 3.L
(-)1->List 3[0]
"LunarReader V1.5.2"
"Code:XChar-Ray"
"by NWater"
"ENTER FILE PATH:"
FkeyMenu(6,"//",I)
"C://"?()->Str 1

If IsExist(Str 1)
 Then IsExist(Str 1)-><r>
Else "File dose not exist"
 Stop
IfEnd

Load("8PX.hzk")->Mat A
Cls
CoordOff:GridOff:AxesOff:LabelOff
_ClrVram

P<0 Or P>=<r>=>0->P'FILE SEEK POINT
0->Q'TMP POINT
(128/4)*(64/8)*4->Dim List 1.B
Load(Str 1,P)->List 1
Do
 If P+Q>=<r>
  Then <r>-P->Q
 IfEnd
 '__ClrVram_
 0->X
 0->Y
 0->R
 Gosub C
 Lbl R
 P+Q->S
 Gosub S,StrAsc("_#E6A8_")
 While X>=0 And X<128 And Y>=0 And Y<64-8 And Q+R>=0 And Q+R+1<Dim List 1 And P+Q+R<<r>
  MOD(List 1[Q+R],0X100)->a
  MOD(List 1[Q+R+1],0X100)->b
  Gosub G,a,b
  Ans->K
  If K
   Then 0X0100*a+b->C
   If X+8>128
    Then 0->X
    Y+8->Y
    Gosub C
   IfEnd
   If Y<(63-8)
    Then Gosub D,a,b,X,Y
    8+X->X
    2+R->R
   IfEnd
  Else 
   If X+6>128 Or List 1[Q+R]=0X0A'0X0A=LF '0X0D=CR
    Then 0->X
    Y+8->Y
    Gosub C
   IfEnd
   If List 1[Q+R]=0X0A
    Then 1+R->R
   ElseIf Y<(63-8)
    Then (X Int/ 4+1)
    LocateYX @Y,X,StrChar(List 1[Q+R],1)
    6+X->X
    1+R->R
   IfEnd
  IfEnd
  If X=128
   Then 0->X
   Y+8->Y
   Gosub C
  IfEnd
  '_Gosub _S,_StrAsc(_"_#E6A8_")
 WhileEnd
 If Y<64-8
  Then 
  If P+Q+R>=<r>
   Then _Rectangle 0,Y,127,64-8,0,0,3
  Else 
   P+Q->P
   Load(Str 1,P)->List 1
   0->Q
   X>=128=>0->X
   Goto R
  IfEnd
 IfEnd
 Lbl K
 If K<>(-)1
  Then Gosub S,StrAsc("#")
  1->K
 Else 
  0->K
 IfEnd
 Switch Getkey1
  Case 47
   Goto X
   Break
  Case 37
   Gosub S,StrAsc("_#E6AD_")
   If Q+R+1+(128/6)(64/8-1)>=Dim List 1
    Load(Str 1,P+Q+R)->List 1
    P+Q+R->P
    0->Q
   Else Q+R->Q
   IfEnd
   Break
  Case 28
   Gosub S,StrAsc("_#E6AC_")
   If Q+R-1-(128/4)(64/8-1)<0
    If P+Q+R-1-(128/4)(64/8-1)<0
     Then 0->P
     0->Q
     0->R
     Load(Str 1)->List 1
    Else 
     P+Q+R-1-(128/4)(64/8-1)->P
     Load(Str 1,P)->List 1
     Q+R+(128/4)(64/8-1)->Q
     0->R
    IfEnd
   IfEnd'
   0->X
   0->Y
   While X>=0 And X<128 And Y>=0 And Y<64-8 And Q-R>=1 And P+Q-R>0
    Gosub G,List 1[Q-R-1],List 1[Q-R]
    If Ans
     Then 8+X->X
     2+R->R
    Else 6+X->X
     If List 1[Q-R]=0X0A
      Then 0->X
      8+Y->Y
     IfEnd
     1+R->R
    IfEnd
    If X>=128
     Then 0->X
     8+Y->Y
    IfEnd
   WhileEnd
   Q-R->Q
   If Q<0
    Then 'P+Q_->_P
    0->Q
    '_If _P<0
     '_Then _0_->_P
     '_IfEnd_
    '_Load(__Str _1,P)_->__List _1
   IfEnd
   P+Q>=S=>0->Q
   Break
  Case 27
   1+Q->Q
   Q>=Dim List 1=>Dim List 1-1->Q
   Break
  Case 38
   (-)1+Q->Q
   Q<0=>0->Q
   Break
  Case 79
   Gosub S,StrAsc("_#E697_")
   Gosub J
   Break
  Case 49
   Gosub T
   If Ans>=0
    Then Ans->P
    0->Q
    Load(Str 1,P)->List 1
   IfEnd
   Break
  Case 78
   FkeyMenu(1,"JUMP")
   FkeyMenu(2,"SRC")
   FkeyMenu(3,"MARK")
   FkeyMenu(4,"TOC")
   (-)K->K
   FkeyMenu(5,"",C)
   FkeyMenu(6,"INFO")
  Default Goto K
 SwitchEnd
 '_Stop_
LpWhile 1

Lbl X
P+Q->P
ClrText
FkeyMenu(1~6,"LunarReader by NWater")
Text @16,0,"This software is free software,"
Text @22,0,"licensedunderGPLv3orlater."
Text @28,0,"Visit https:////github.com"
Text @34,12,"//nwater23//LunarReader"
Text @40,0,"for more info and updates."
"Press [EXIT]..."
Stop
Return 

Lbl C
_Rectangle 0,Y,127,Y+7,0,0,0
'__Rectangle _0,64-8,127,63,0,0,1
Return 

Lbl G
Local a,b
If MOD(a,0X100)>=0XA1 And MOD(a,0X100)<0XFF And MOD(b,0X100)>=0XA1 And MOD(b,0X100)<0XFF
 Then Return 1
Else Return 0
IfEnd

Lbl D
Local a,b,x,y
X->x
Y->y
'x<0_ Or _x+7_>=_128_ Or _y<0_ Or _y+7_>=_64_=>__Return _
'"WORD "+Hex(a)+Hex(b)
a>=0XA1=>MOD(a-0X00A1,0X7F)->a
b>=0XA1=>MOD(b-0X00A1,0X7F)->b
'_ToStr(_a)+"-"+ToStr(b)
94a+b->c
'_Hex(_c)
Screen.G
'_Load(_"8PX.hzk",8c+O)->Mat A
'_DotPut(__Mat _A[0,8c+O],X,Y,X+7,Y+7)

If 8c+O<Theta
 Then DotPut(Mat A[0,8c+O],x,y,x+7,y+7)
Else '_LocateYX _y,x,"_@00D8_"
 _Rectangle x,y,x+7,y+7,0,0,3
IfEnd
'_ACBreak_
Return 

Lbl J
1->K
0->T
While K
 _Rectangle 8,7,120,26,1,1,0
 LocateYX @9,9,"JUMP TO"
 LocateYX @17,9,"#"+Hex(T)
 Getkey1->K
 K=71=>16T->T
 K=72=>16T+1->T
 K=62=>16T+2->T
 K=52=>16T+3->T
 K=73=>16T+4->T
 K=63=>16T+5->T
 K=53=>16T+6->T
 K=74=>16T+7->T
 K=64=>16T+8->T
 K=54=>16T+9->T
 K=76=>16T+10->T
 K=66=>16T+11->T
 K=56=>16T+12->T
 K=46=>16T+13->T
 K=36=>16T+14->T
 K=26=>16T+15->T
 K=44=>T/16->T
 K=47=>0->K
 If K=31
  If T<0
   Then 0->T
  IfEnd
  If T>=<r>
   Then <r>-1->T
  IfEnd
  T->P
  0->Q
  Load(Str 1,P)->List 1
  0->K
 IfEnd
WhileEnd
Return T

Lbl T
If (-)1=List 3[0]
 Then 0->List 3[0]
 0->J
 1->I
 _Rectangle 7,8,120,40,1,1,0
 LocateYX @12,9,"GENERATING TOC"
 LocateYX @20,9,"PLEASE WAIT..."
 While I<<r> And J<Dim List 3-1
  LocateYX @28,9,Hex(I)+"//"+Hex(<r>)
  Load(Str 1,I)->List 1
  StrSrc($List 1,StrChar(0X0A,1))->K
  If K>=0
   Then 
   If K>Dim List 1-(64/4)
    Then I+K-1->I
   Else MOD(List 1[K+1],0X100)->B
    0->X
    B=0XA0+21 And List 1[K+2]=0XA0+58=>1->X'Nth
    B=StrAsc("[")=>1->X
    B=StrAsc("**")=>1->X
    B=StrAsc("#")=>1->X
    B=StrAsc("Char-")=>1->X
    B>=StrAsc("0") And B<=StrAsc("9")=>1->X
    If X
     Then 
     1+J->J
     I+K+1->List 3[J]
     I+K+2->I
    Else I+K+1->I
    IfEnd
   IfEnd
  Else Dim List 1+I->I
  IfEnd
 WhileEnd
IfEnd
0->I
0->J
(-)1->A
While A=(-)1
 If J<0
  Then 0->J
  I-1->I
 IfEnd
 If J>=(64/8-1)
  Then (64/8-2)->J
  I+1->I
 IfEnd
 MOD(I,Dim List 3)->I
 (64)->Dim List 2.B
 For 0->K To (64/8-2)
  _Rectangle 0,8K,127,8K+7,0,0,0
  I+K>=Dim List 3=>Next
 Text @8K,0,Hex(List 3[I+K])
 Load(Str 1,List 3[I+K])->List 2
 4*7->X
 For 0->L To Dim List 2-2
  X+7>=128=>Next
 
 MOD(List 2[L],0X100)->a
 MOD(List 2[L+1],0X100)->b
 Gosub G,a,b
 If Ans
  Then 8K->Y
  Gosub D,a,b,X,8K
  8+X->X
  1+L->L
 Else LocateYX @8K,X,StrChar(List 2[L],1)
  6+X->X
 IfEnd
 X+7>=128=>Dim List 3->L
Next
J=K=>_Rectangle 0,8K,127,8K+7,0,0,2
Next
ClrList 2
Getkey1->K
K=28=>J-1->J
K=37=>J+1->J
K=38=>0->I~J
K=31=>I+J->A
K=47=>(-)2->A
WhileEnd
Load(Str 1,P)->List 1
If A>=0
 Then Return List 3[A]
Else Return (-)1
IfEnd

Lbl S
Local s
_Rectangle 0,64-7,127,63,0,0,1
StrChar(s,1)+Hex(P+Q)+"//"+Hex(<r>)->Str 4
Str 4+" "+ToStr(100(P+Q)/<r>)+"%"->Str 4
Str 4+" +"+Hex(Q)+"//"+Hex(Dim List 1)->Str 4
'_LocateYX _@64-7,0,_Str _4,R
Text @64-6,1,Str 4,R
Return 